/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028a4380380620028a48339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b6122e780620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610234578063b88d4fde14610250578063c87b56dd1461026c578063e985e9c51461029c576100df565b80636352211e146101b657806370a08231146101e657806395d89b4114610216576100df565b8063095ea7b3116100bd578063095ea7b31461016257806323b872dd1461017e57806342842e0e1461019a576100df565b806301ffc9a7146100e457806306fdde0314610114578063081812fc14610132575b600080fd5b6100fe60048036038101906100f99190611624565b6102cc565b60405161010b919061166c565b60405180910390f35b61011c6103ae565b6040516101299190611717565b60405180910390f35b61014c6004803603810190610147919061176f565b610440565b60405161015991906117dd565b60405180910390f35b61017c60048036038101906101779190611824565b610486565b005b61019860048036038101906101939190611864565b61059d565b005b6101b460048036038101906101af9190611864565b6105fd565b005b6101d060048036038101906101cb919061176f565b61061d565b6040516101dd91906117dd565b60405180910390f35b61020060048036038101906101fb91906118b7565b6106a3565b60405161020d91906118f3565b60405180910390f35b61021e61075a565b60405161022b9190611717565b60405180910390f35b61024e6004803603810190610249919061193a565b6107ec565b005b61026a60048036038101906102659190611aaf565b610802565b005b6102866004803603810190610281919061176f565b610864565b6040516102939190611717565b60405180910390f35b6102b660048036038101906102b19190611b32565b6108cc565b6040516102c3919061166c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103a757506103a682610960565b5b9050919050565b6060600080546103bd90611ba1565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990611ba1565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b5050505050905090565b600061044b826109ca565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104918261061d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890611c44565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610520610a15565b73ffffffffffffffffffffffffffffffffffffffff16148061054f575061054e81610549610a15565b6108cc565b5b61058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590611cd6565b60405180910390fd5b6105988383610a1d565b505050565b6105ae6105a8610a15565b82610ad6565b6105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490611d68565b60405180910390fd5b6105f8838383610b6b565b505050565b61061883838360405180602001604052806000815250610802565b505050565b60008061062983610e64565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611dd4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a90611e66565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461076990611ba1565b80601f016020809104026020016040519081016040528092919081815260200182805461079590611ba1565b80156107e25780601f106107b7576101008083540402835291602001916107e2565b820191906000526020600020905b8154815290600101906020018083116107c557829003601f168201915b5050505050905090565b6107fe6107f7610a15565b8383610ea1565b5050565b61081361080d610a15565b83610ad6565b610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990611d68565b60405180910390fd5b61085e8484848461100d565b50505050565b606061086f826109ca565b6000610879611069565b9050600081511161089957604051806020016040528060008152506108c4565b806108a384611080565b6040516020016108b4929190611ec2565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109d38161114e565b610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0990611dd4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a908361061d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ae28361061d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b245750610b2381856108cc565b5b80610b6257508373ffffffffffffffffffffffffffffffffffffffff16610b4a84610440565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b8b8261061d565b73ffffffffffffffffffffffffffffffffffffffff1614610be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd890611f58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4790611fea565b60405180910390fd5b610c5d838383600161118f565b8273ffffffffffffffffffffffffffffffffffffffff16610c7d8261061d565b73ffffffffffffffffffffffffffffffffffffffff1614610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90611f58565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5f83838360016112b5565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0690612056565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611000919061166c565b60405180910390a3505050565b611018848484610b6b565b611024848484846112bb565b611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a906120e8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108f84611442565b01905060008167ffffffffffffffff8111156110ae576110ad611984565b5b6040519080825280601f01601f1916602001820160405280156110e05781602001600182028036833780820191505090505b509050600082602001820190505b600115611143578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161113757611136612108565b5b049450600085036110ee575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661117083610e64565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112af57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112235780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121b9190612166565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ae5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a6919061219a565b925050819055505b5b50505050565b50505050565b60006112dc8473ffffffffffffffffffffffffffffffffffffffff16611595565b15611435578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611305610a15565b8786866040518563ffffffff1660e01b81526004016113279493929190612223565b6020604051808303816000875af192505050801561136357506040513d601f19601f820116820180604052508101906113609190612284565b60015b6113e5573d8060008114611393576040519150601f19603f3d011682016040523d82523d6000602084013e611398565b606091505b5060008151036113dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d4906120e8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061143a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114a0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161149657611495612108565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114dd576d04ee2d6d415b85acef810000000083816114d3576114d2612108565b5b0492506020810190505b662386f26fc10000831061150c57662386f26fc10000838161150257611501612108565b5b0492506010810190505b6305f5e1008310611535576305f5e100838161152b5761152a612108565b5b0492506008810190505b612710831061155a5761271083816115505761154f612108565b5b0492506004810190505b6064831061157d576064838161157357611572612108565b5b0492506002810190505b600a831061158c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611601816115cc565b811461160c57600080fd5b50565b60008135905061161e816115f8565b92915050565b60006020828403121561163a576116396115c2565b5b60006116488482850161160f565b91505092915050565b60008115159050919050565b61166681611651565b82525050565b6000602082019050611681600083018461165d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116c15780820151818401526020810190506116a6565b60008484015250505050565b6000601f19601f8301169050919050565b60006116e982611687565b6116f38185611692565b93506117038185602086016116a3565b61170c816116cd565b840191505092915050565b6000602082019050818103600083015261173181846116de565b905092915050565b6000819050919050565b61174c81611739565b811461175757600080fd5b50565b60008135905061176981611743565b92915050565b600060208284031215611785576117846115c2565b5b60006117938482850161175a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117c78261179c565b9050919050565b6117d7816117bc565b82525050565b60006020820190506117f260008301846117ce565b92915050565b611801816117bc565b811461180c57600080fd5b50565b60008135905061181e816117f8565b92915050565b6000806040838503121561183b5761183a6115c2565b5b60006118498582860161180f565b925050602061185a8582860161175a565b9150509250929050565b60008060006060848603121561187d5761187c6115c2565b5b600061188b8682870161180f565b935050602061189c8682870161180f565b92505060406118ad8682870161175a565b9150509250925092565b6000602082840312156118cd576118cc6115c2565b5b60006118db8482850161180f565b91505092915050565b6118ed81611739565b82525050565b600060208201905061190860008301846118e4565b92915050565b61191781611651565b811461192257600080fd5b50565b6000813590506119348161190e565b92915050565b60008060408385031215611951576119506115c2565b5b600061195f8582860161180f565b925050602061197085828601611925565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119bc826116cd565b810181811067ffffffffffffffff821117156119db576119da611984565b5b80604052505050565b60006119ee6115b8565b90506119fa82826119b3565b919050565b600067ffffffffffffffff821115611a1a57611a19611984565b5b611a23826116cd565b9050602081019050919050565b82818337600083830152505050565b6000611a52611a4d846119ff565b6119e4565b905082815260208101848484011115611a6e57611a6d61197f565b5b611a79848285611a30565b509392505050565b600082601f830112611a9657611a9561197a565b5b8135611aa6848260208601611a3f565b91505092915050565b60008060008060808587031215611ac957611ac86115c2565b5b6000611ad78782880161180f565b9450506020611ae88782880161180f565b9350506040611af98782880161175a565b925050606085013567ffffffffffffffff811115611b1a57611b196115c7565b5b611b2687828801611a81565b91505092959194509250565b60008060408385031215611b4957611b486115c2565b5b6000611b578582860161180f565b9250506020611b688582860161180f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bb957607f821691505b602082108103611bcc57611bcb611b72565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c2e602183611692565b9150611c3982611bd2565b604082019050919050565b60006020820190508181036000830152611c5d81611c21565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cc0603d83611692565b9150611ccb82611c64565b604082019050919050565b60006020820190508181036000830152611cef81611cb3565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d52602d83611692565b9150611d5d82611cf6565b604082019050919050565b60006020820190508181036000830152611d8181611d45565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dbe601883611692565b9150611dc982611d88565b602082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e50602983611692565b9150611e5b82611df4565b604082019050919050565b60006020820190508181036000830152611e7f81611e43565b9050919050565b600081905092915050565b6000611e9c82611687565b611ea68185611e86565b9350611eb68185602086016116a3565b80840191505092915050565b6000611ece8285611e91565b9150611eda8284611e91565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f42602583611692565b9150611f4d82611ee6565b604082019050919050565b60006020820190508181036000830152611f7181611f35565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fd4602483611692565b9150611fdf82611f78565b604082019050919050565b6000602082019050818103600083015261200381611fc7565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612040601983611692565b915061204b8261200a565b602082019050919050565b6000602082019050818103600083015261206f81612033565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120d2603283611692565b91506120dd82612076565b604082019050919050565b60006020820190508181036000830152612101816120c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061217182611739565b915061217c83611739565b925082820390508181111561219457612193612137565b5b92915050565b60006121a582611739565b91506121b083611739565b92508282019050808211156121c8576121c7612137565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006121f5826121ce565b6121ff81856121d9565b935061220f8185602086016116a3565b612218816116cd565b840191505092915050565b600060808201905061223860008301876117ce565b61224560208301866117ce565b61225260408301856118e4565b818103606083015261226481846121ea565b905095945050505050565b60008151905061227e816115f8565b92915050565b60006020828403121561229a576122996115c2565b5b60006122a88482850161226f565b9150509291505056fea2646970667358221220f9822cdb27a6f5a02873484e63343f0830d6fde20298e9f0f2571ad2fd872c9b64736f6c63430008110033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
